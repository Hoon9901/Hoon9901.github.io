{"componentChunkName":"component---src-templates-post-tsx","path":"/spring-security-1/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"spring-security란\" style=\"position:relative;\"><a href=\"#spring-security%EB%9E%80\" aria-label=\"spring security란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring Security란?</h2>\n<ul>\n<li>Spring 기반의 애플리케이션의 보안(인증과 권한, 인가 등)을 담당하는 스프링 하위 프레임워크</li>\n<li>\n<p><strong>인증</strong>과 <strong>권한</strong>에 대한 부분을 <strong>Filter</strong> 흐름에 따라 처리</p>\n<ul>\n<li>Filter는 Dispatcher Servlet 으로 가기전에 적용</li>\n<li>따라서 가장 먼저 URL 요청을 받는다.</li>\n<li>하지만, Interceptor는 Dispatcher와 Contoller 사이에 위치한다는 점에서 적용 시기의 차이가 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"인증authentication과-인가authorization\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%A6%9Dauthentication%EA%B3%BC-%EC%9D%B8%EA%B0%80authorization\" aria-label=\"인증authentication과 인가authorization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인증(Authentication)과 인가(Authorization)</h3>\n<ul>\n<li>인증(Authentiacation) : 해당 사용자가 본인이 맞는지를 <strong>확인</strong>하는 절차</li>\n<li>인가(Authorization) : 인증된 사용자가 요청한 자원에 접근 가능한지를 결정하는 절차</li>\n</ul>\n<blockquote>\n<p>Authentiacation → (인증 성공 후) → Authorization</p>\n</blockquote>\n<ul>\n<li>Spring Security는 기본적으로 인증 절차를 거친 후, 인가 절차를 진행</li>\n<li>인가 과정에서 해당 리소스에 대한 접근 권한이 있는지를 확인하게 된다.</li>\n<li>\n<p>Spring Security에서는 이러한 인증과 인가를 위해 Principal을 아이디로, Credential을 비밀번호로 사용하는 <strong>Credential 기반의 인증 방식을</strong> 사용한다.</p>\n<ul>\n<li>Principal(접근 주체) : 보호받는 리소스에 접근하는 대상</li>\n<li>Credential(비밀전호) : 리소스에 접근하는 대상의 비밀번호</li>\n</ul>\n</li>\n</ul>","excerpt":"Spring Security란? Spring 기반의 애플리케이션의 보안(인증과 권한, 인가 등)을 담당하는 스프링 하위 프레임워크 인증과 권한에 대한 부분을 Filter 흐름에 따라 처리 Filter는 Dispatcher Servlet 으로 가기전에…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/spring-security-1/#spring-security%EB%9E%80\">Spring Security란?</a></p>\n<ul>\n<li><a href=\"/spring-security-1/#%EC%9D%B8%EC%A6%9Dauthentication%EA%B3%BC-%EC%9D%B8%EA%B0%80authorization\">인증(Authentication)과 인가(Authorization)</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/spring-security-1/"},"frontmatter":{"title":"SpringSecurity 란?","date":"Jan 04, 2022","tags":["Spring Security"],"keywords":["스프링","스프링부트","SpringBoot","Spring Security"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/spring-security-1/","series":[],"lastmod":"2022-01-04"}},"staticQueryHashes":["2027115977","694178885"]}