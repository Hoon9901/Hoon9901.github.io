{"componentChunkName":"component---src-templates-post-tsx","path":"/component_scan/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"component-어노테이션\" style=\"position:relative;\"><a href=\"#component-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\"component 어노테이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@Component 어노테이션</h1>\n<p>스프링이 검색해서 빈으로 등록할 수 있도록 할려면 클래스에 <code class=\"language-text\">@Component</code> 어노테이션을 붙여야 한다.\n<code class=\"language-text\">@Componet</code> 어노테이션은 해당 클래스를 스캔 대상으로 표시한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token annotation punctuation\">@Component</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MemberDao</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span> nextId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> 생략\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">@Component</code> 어노테이션에 값을 주었는지에 따라 빈으로 등록할 때 사용할 이름이 결정된다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">value</code> 값을 주지 않았다면 : 클래스 이름의 첫 글자를 소문자로 바꾼 이름을 사용한다.</p>\n<ul>\n<li>\n<p>ex) <code class=\"language-text\">MemberDao</code> 클래스라면,  “<code class=\"language-text\">memberDao</code>”를 빈 이름으로 사용하고</p>\n<p><code class=\"language-text\">MemberRegisterService</code> 클래스라면 “<code class=\"language-text\">memberRegisterService</code>”를 빈 이름으로 사용한다.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"componentscan-어노테이션\" style=\"position:relative;\"><a href=\"#componentscan-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\"componentscan 어노테이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@ComponentScan 어노테이션</h1>\n<p><code class=\"language-text\">@Component</code> 어노테이션을 붙인 클래스를 스캔해서 스프링 빈으로 등록하려면 설정 클래스(<code class=\"language-text\">@Configuration</code>)에 <code class=\"language-text\">@ComponentScan</code> 어노테이션을 적용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"com.example.sp5chap04.spring\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppCtx</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"printer\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MemberPrinter</span> <span class=\"token function\">memberPrinter1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MemberPrinter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"summaryPrinter\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MemberPrinter</span> <span class=\"token function\">memberPrinter2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MemberSummaryPrinter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">VersionPrinter</span> <span class=\"token function\">versionPrinter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">VersionPrinter</span> versionPrinter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VersionPrinter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        versionPrinter<span class=\"token punctuation\">.</span><span class=\"token function\">setMajorVersion</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        versionPrinter<span class=\"token punctuation\">.</span><span class=\"token function\">setMinorVersion</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> versionPrinter<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">@Component</code> 어노테이션을 붙인 클래스를 검색해서 <code class=\"language-text\">Bean</code>으로 등록해주기 때문에 설정 코드가 줄어들었다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">basePackages</code> 속성 : 해당 속성값을 <code class=\"language-text\">{”com.example.sp5chap04.spring”}</code> 로 해주었다.</p>\n<ul>\n<li>이 속성은 스캔 대상 패키지 목록을 지정한다.</li>\n<li><code class=\"language-text\">“com.example.sp5chap04.spring”</code> 패키지와 그 하위 패키지에 속한 클래스를 스캔 대상으로 지정한다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"스캔-대상에서-제외하거나-포함하기\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%BA%94-%EB%8C%80%EC%83%81%EC%97%90%EC%84%9C-%EC%A0%9C%EC%99%B8%ED%95%98%EA%B1%B0%EB%82%98-%ED%8F%AC%ED%95%A8%ED%95%98%EA%B8%B0\" aria-label=\"스캔 대상에서 제외하거나 포함하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스캔 대상에서 제외하거나 포함하기</h2>\n<h3 id=\"excludefilters-속성\" style=\"position:relative;\"><a href=\"#excludefilters-%EC%86%8D%EC%84%B1\" aria-label=\"excludefilters 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>excludeFilters 속성</h3>\n<p><code class=\"language-text\">excludeFilters</code> 속성을 사용하면 스캔할 때 특정 대상을 자동 등록 대상에서 제외할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"com.example.sp5chap04.spring\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> excludeFilters <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@ComponentScan.Filter</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">FilterType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">REGEX</span><span class=\"token punctuation\">,</span> pattern <span class=\"token operator\">=</span> <span class=\"token string\">\"spring\\\\.*Dao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppCtxWithExclude</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MemberDao</span> <span class=\"token function\">memberDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MemberDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"printer\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MemberPrinter</span> <span class=\"token function\">memberPrinter1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MemberPrinter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"summaryPrinter\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MemberSummaryPrinter</span> <span class=\"token function\">memberPrinter2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MemberSummaryPrinter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">VersionPrinter</span> <span class=\"token function\">versionPrinter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">VersionPrinter</span> versionPrinter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VersionPrinter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        versionPrinter<span class=\"token punctuation\">.</span><span class=\"token function\">setMajorVersion</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        versionPrinter<span class=\"token punctuation\">.</span><span class=\"token function\">setMinorVersion</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> versionPrinter<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">@Filter</code> 어노테이션의 <code class=\"language-text\">type</code> 속성 값으로  <code class=\"language-text\">FilterType.REGEX</code>를 주었다. 이는 정규표현식을 사용해서 제외 대상을 지정한다는 것을 의미한다.</p>\n<p><code class=\"language-text\">pattern</code> 속성은 <code class=\"language-text\">FilterType</code>에 적용할 값을 설정한다. <code class=\"language-text\">“spring.”</code>으로 시작하고 <code class=\"language-text\">Dao</code>로 끝나는 정규표현식을 지정했으므로 <code class=\"language-text\">spring.MemberDao</code> 클래스를 컴포넌트 스캔 대상에서 제외한다.</p>\n<h3 id=\"filtertypeaspectj\" style=\"position:relative;\"><a href=\"#filtertypeaspectj\" aria-label=\"filtertypeaspectj permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FilterType.ASPECTJ</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"com.example.sp5chap04.spring\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> excludeFilters <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@ComponentScan.Filter</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">FilterType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ASPECTJ</span><span class=\"token punctuation\">,</span> pattern <span class=\"token operator\">=</span> <span class=\"token string\">\"spring.*Dao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">FilterType.ASPECTJ</code>를 필터타입으로 설정할 수 있다. 이 타입을 사용하면 정규표현식 대신 <code class=\"language-text\">AspectJ</code> 패턴을 사용해서 대상을 지정한다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">AspectJ</code> 패턴이 동작하려면 의존 대상에 <code class=\"language-text\">aspectjweaver</code> 모듈을 추가해야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>org<span class=\"token punctuation\">.</span>aspectj<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span>\n\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>aspectjweaver<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span>\n\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">1.8</span><span class=\"token number\">.13</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span>\n\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"filtertypeannotation\" style=\"position:relative;\"><a href=\"#filtertypeannotation\" aria-label=\"filtertypeannotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FilterType.ANNOTATION</h3>\n<p>특정 어노테이션을 붙인 타입을 컴포넌트 대상에서 제외할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token constant\">RUNTIME</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TYPE</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">NoProduct</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token constant\">RUNTIME</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TYPE</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">ManualBean</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 두 어노테이션을 붙인 클래스를 컴포넌트 스캔 대상에서 제외하려면 다음과 같이 <code class=\"language-text\">excludeFilters</code> 속성을 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"com.example.sp5chap04.spring\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> excludeFilters <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@ComponentScan.Filter</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">FilterType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ANNOTATION</span><span class=\"token punctuation\">,</span> classes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token class-name\">NoProduct</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ManualBean</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppCtxWithExclude</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">type</code> 속성 값으로 <code class=\"language-text\">FilterType.ANNOTATION</code>을 사용하면 <code class=\"language-text\">classes</code> 속성에 필터로 사용할 어노테이션 타입을 값으로 준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ManualBean</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MemberDao</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">@ManualBean</code> 어노테이션을 제외 대상에 추가했으므로 <code class=\"language-text\">MemberDao</code> 클래스를 컴포넌트 스캔 대상에서 제외한다.</p>\n<h2 id=\"filtertypeassignable_type\" style=\"position:relative;\"><a href=\"#filtertypeassignable_type\" aria-label=\"filtertypeassignable_type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FilterType.ASSIGNABLE_TYPE</h2>\n<p>특정 타입이나 그 하위 타입을 컴포넌트 스캔 대상에서 제외하려면 <code class=\"language-text\">ASSIGNABLE_TYPE</code>을 <code class=\"language-text\">FilterType</code>으로 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"com.example.sp5chap04.spring\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> excludeFilters <span class=\"token operator\">=</span> <span class=\"token annotation punctuation\">@ComponentScan.Filter</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">FilterType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ASSIGNABLE_TYPE</span><span class=\"token punctuation\">,</span> classes <span class=\"token operator\">=</span> <span class=\"token class-name\">MemberDao</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppCtxWithExclude</span> <span class=\"token punctuation\">{</span></code></pre></div>\n<p><code class=\"language-text\">classes</code> 속성에는 제외할 타입 목록을 지정한다. 제외할 타입이 한 개 이상이면 배열 표기를 사용할 수 있다.</p>\n<h2 id=\"설정할-필터가-두개-이상\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%A0%95%ED%95%A0-%ED%95%84%ED%84%B0%EA%B0%80-%EB%91%90%EA%B0%9C-%EC%9D%B4%EC%83%81\" aria-label=\"설정할 필터가 두개 이상 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정할 필터가 두개 이상</h2>\n<p><code class=\"language-text\">@ComponentScan</code>의 <code class=\"language-text\">excludeFilters</code> 속성에 배열을 사용해서 <code class=\"language-text\">@Filter</code> 목록을 전달하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@CompoenentScan</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"com.example.sp5chap04.spring\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> excludeFilters <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token annotation punctuation\">@Filter</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">FilterType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ANNOTATION</span><span class=\"token punctuation\">,</span> classes <span class=\"token operator\">=</span> <span class=\"token class-name\">ManualBean</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\t<span class=\"token annotation punctuation\">@Filter</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">FilterType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">REGEX</span><span class=\"token punctuation\">,</span> pattern <span class=\"token operator\">=</span> <span class=\"token string\">\"spring2\\\\.*\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","excerpt":"@Component 어노테이션 스프링이 검색해서 빈으로 등록할 수 있도록 할려면 클래스에  어노테이션을 붙여야 한다.\n 어노테이션은 해당 클래스를 스캔 대상으로 표시한다.  어노테이션에 값을 주었는지에 따라 빈으로 등록할 때 사용할 이름이 결정된다.…","tableOfContents":"<ul>\n<li><a href=\"/component_scan/#component-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\">@Component 어노테이션</a></li>\n<li>\n<p><a href=\"/component_scan/#componentscan-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\">@ComponentScan 어노테이션</a></p>\n<ul>\n<li>\n<p><a href=\"/component_scan/#%EC%8A%A4%EC%BA%94-%EB%8C%80%EC%83%81%EC%97%90%EC%84%9C-%EC%A0%9C%EC%99%B8%ED%95%98%EA%B1%B0%EB%82%98-%ED%8F%AC%ED%95%A8%ED%95%98%EA%B8%B0\">스캔 대상에서 제외하거나 포함하기</a></p>\n<ul>\n<li><a href=\"/component_scan/#excludefilters-%EC%86%8D%EC%84%B1\">excludeFilters 속성</a></li>\n<li><a href=\"/component_scan/#filtertypeaspectj\">FilterType.ASPECTJ</a></li>\n<li><a href=\"/component_scan/#filtertypeannotation\">FilterType.ANNOTATION</a></li>\n</ul>\n</li>\n<li><a href=\"/component_scan/#filtertypeassignable_type\">FilterType.ASSIGNABLE_TYPE</a></li>\n<li><a href=\"/component_scan/#%EC%84%A4%EC%A0%95%ED%95%A0-%ED%95%84%ED%84%B0%EA%B0%80-%EB%91%90%EA%B0%9C-%EC%9D%B4%EC%83%81\">설정할 필터가 두개 이상</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/component_scan/"},"frontmatter":{"title":"[Spring] @Component, @ComponentScan 으로 스캔 대상 지정","date":"Jun 24, 2022","tags":["Spring","스프링5입문시리즈"],"keywords":["스프링","스프링부트","SpringBoot","Component","ComponentScan"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/component_scan/","series":[],"lastmod":"2022-06-24"}},"staticQueryHashes":["2027115977","694178885"]}