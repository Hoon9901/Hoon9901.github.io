{"componentChunkName":"component---src-pages-tags-tsx","path":"/tags/","result":{"data":{"allMarkdownRemark":{"group":[{"fieldValue":"AWS","totalCount":2,"edges":[{"node":{"excerpt":"AWS - S3 리소스를 CloudFront로 캐싱하자 이어서 S3 이미지 리사이징 동작 순서 클라이언트에서  요청을 보냄. CDN에서 w, h, f, q 쿼리 파라미터가 붙어있으면  해당 S3 Object(이미지)가 CDN에 캐싱이 되어있으면 해당…","fields":{"slug":"/aws-s3-image-resize/"},"frontmatter":{"date":"Apr 12, 2023","update":"Jan 01, 0001","title":"[AWS] Lambda@Edge를 통해 이미지 리사이징을 해서 웹 성능 개선을 해보자","tags":["AWS","Cache","S3","CloudFront","Lambda"]}}},{"node":{"excerpt":"S3에 CloudFront 적용하기 현재 개발중인 서비스에서 이미지를 불러오는것을 S3에서 직접적으로 가져와 사용하고 있는데\n서비스 특성상 이러한 이미지와 영상과 같은 미디어 파일들을 많이 사용되는 서비스 구조라 \n서비스의 구조가 많이 무거워지고 리…","fields":{"slug":"/aws-s3-cloudfront/"},"frontmatter":{"date":"Apr 05, 2023","update":"Jan 01, 0001","title":"[AWS] S3 리소스를 CloudFront를 통해 캐싱하자","tags":["AWS","Cache","S3","CloudFront"]}}}]},{"fieldValue":"ArgoCD","totalCount":1,"edges":[{"node":{"excerpt":"개요 ArgoCD에서는 알림 기능을 제공하는데 해당 기능을 사용하면 ArgoCD에서 사용되는 Application(예: Argo를 통해 배포한 k8s object)을 지속적으로 모니터링하고 상태의 변경 사항을 알릴 수 있다. ArgoCD에서는 Tri…","fields":{"slug":"/argocd-notification/"},"frontmatter":{"date":"May 24, 2023","update":"Jan 01, 0001","title":"[K8S] ArgoCD Notification을 이용해 Discord Webhook으로 알림을 보내보자","tags":["Kubernetes","ArgoCD"]}}}]},{"fieldValue":"Backend","totalCount":1,"edges":[{"node":{"excerpt":"NestJS란  Node.JS에 기반을 둔 웹 API 프레임워크\nExpress 또는 Fastify 프레임워크를 래핑하여 동작함 Node.js는 쉽게 사용하고 뛰어난 확장성이 있지만, 과도한 유연함으로 인해 SW의 품질이 일정하지 않고 알맞는 라이브러…","fields":{"slug":"/what-is-nestjs/"},"frontmatter":{"date":"Feb 10, 2023","update":"Jan 01, 0001","title":"NestJS의 개요 및 특징","tags":["Backend","NestJS"]}}}]},{"fieldValue":"Blog","totalCount":1,"edges":[{"node":{"excerpt":"처음에는 Jekyll로 블로그를 만들었는데 생각보다 마음에 안들어서, 검색하다보니 Gatsby를 발견했다.\nGatsby는  프레임워크를 기반으로 만들었는데 React를 전에 한번 입문해봐서 이걸로 선택했다.\n\n\n처음에는 으로 node module를 …","fields":{"slug":"/gatsby-blog-start/"},"frontmatter":{"date":"Sep 28, 2021","update":"Jan 01, 0001","title":"Gatsby로 블로그를 만들기","tags":["Gatsby","Blog"]}}}]},{"fieldValue":"Cache","totalCount":2,"edges":[{"node":{"excerpt":"AWS - S3 리소스를 CloudFront로 캐싱하자 이어서 S3 이미지 리사이징 동작 순서 클라이언트에서  요청을 보냄. CDN에서 w, h, f, q 쿼리 파라미터가 붙어있으면  해당 S3 Object(이미지)가 CDN에 캐싱이 되어있으면 해당…","fields":{"slug":"/aws-s3-image-resize/"},"frontmatter":{"date":"Apr 12, 2023","update":"Jan 01, 0001","title":"[AWS] Lambda@Edge를 통해 이미지 리사이징을 해서 웹 성능 개선을 해보자","tags":["AWS","Cache","S3","CloudFront","Lambda"]}}},{"node":{"excerpt":"S3에 CloudFront 적용하기 현재 개발중인 서비스에서 이미지를 불러오는것을 S3에서 직접적으로 가져와 사용하고 있는데\n서비스 특성상 이러한 이미지와 영상과 같은 미디어 파일들을 많이 사용되는 서비스 구조라 \n서비스의 구조가 많이 무거워지고 리…","fields":{"slug":"/aws-s3-cloudfront/"},"frontmatter":{"date":"Apr 05, 2023","update":"Jan 01, 0001","title":"[AWS] S3 리소스를 CloudFront를 통해 캐싱하자","tags":["AWS","Cache","S3","CloudFront"]}}}]},{"fieldValue":"Cert-Manager","totalCount":1,"edges":[{"node":{"excerpt":"Cert-Manager \nCert-Manager는 Kubernetes 내부에서 HTTPS 통신을 위한 인증서를 생성하고 인증서가 만료되면 자동으로 갱신해주는 Certificate Manager Controller 이다. 해당 문서에서는 Cert-Ma…","fields":{"slug":"/cert-manager-begin/"},"frontmatter":{"date":"Mar 14, 2023","update":"Jan 01, 0001","title":"[K8S] Cert-Manager 설치 및 ACME DNS01 챌린지를 통한 Let's encrypt 인증서 발급 및 사용","tags":["Kubernetes","Cert-Manager"]}}}]},{"fieldValue":"Cloud","totalCount":1,"edges":[{"node":{"excerpt":"Spring Cloud - Config Server/Client  spring cloud config server 구성 아키텍쳐 Spring Cloud Config Server 의 저장소는 git, vault, aws s3, redis, jdbc 등…","fields":{"slug":"/spring-cloud-config/"},"frontmatter":{"date":"Mar 07, 2022","update":"Jan 01, 0001","title":"Spring Cloud Config Server/Client","tags":["SpringBoot","Cloud","Config"]}}}]},{"fieldValue":"CloudFront","totalCount":2,"edges":[{"node":{"excerpt":"AWS - S3 리소스를 CloudFront로 캐싱하자 이어서 S3 이미지 리사이징 동작 순서 클라이언트에서  요청을 보냄. CDN에서 w, h, f, q 쿼리 파라미터가 붙어있으면  해당 S3 Object(이미지)가 CDN에 캐싱이 되어있으면 해당…","fields":{"slug":"/aws-s3-image-resize/"},"frontmatter":{"date":"Apr 12, 2023","update":"Jan 01, 0001","title":"[AWS] Lambda@Edge를 통해 이미지 리사이징을 해서 웹 성능 개선을 해보자","tags":["AWS","Cache","S3","CloudFront","Lambda"]}}},{"node":{"excerpt":"S3에 CloudFront 적용하기 현재 개발중인 서비스에서 이미지를 불러오는것을 S3에서 직접적으로 가져와 사용하고 있는데\n서비스 특성상 이러한 이미지와 영상과 같은 미디어 파일들을 많이 사용되는 서비스 구조라 \n서비스의 구조가 많이 무거워지고 리…","fields":{"slug":"/aws-s3-cloudfront/"},"frontmatter":{"date":"Apr 05, 2023","update":"Jan 01, 0001","title":"[AWS] S3 리소스를 CloudFront를 통해 캐싱하자","tags":["AWS","Cache","S3","CloudFront"]}}}]},{"fieldValue":"Config","totalCount":1,"edges":[{"node":{"excerpt":"Spring Cloud - Config Server/Client  spring cloud config server 구성 아키텍쳐 Spring Cloud Config Server 의 저장소는 git, vault, aws s3, redis, jdbc 등…","fields":{"slug":"/spring-cloud-config/"},"frontmatter":{"date":"Mar 07, 2022","update":"Jan 01, 0001","title":"Spring Cloud Config Server/Client","tags":["SpringBoot","Cloud","Config"]}}}]},{"fieldValue":"Discord","totalCount":1,"edges":[{"node":{"excerpt":"이 글에서는 스프링부트에서 디스코드 WebHook을 사용하여, 어떠한 이벤트 요청이 오면, 알림을 알려주는 것을 해보겠습니다. WebHook 이란?  WebHook은 웹페이지 또는 웹앱에서 발생하는 특정 행동(이벤트)들을 커스텀 Callback 형식…","fields":{"slug":"/springboot-disord-webhook/"},"frontmatter":{"date":"Feb 19, 2022","update":"Jan 01, 0001","title":"[SpringBoot] 디스코드 WebHook으로 알림 보내기","tags":["SpringBoot","Discord","WebHook"]}}}]},{"fieldValue":"FileWatch","totalCount":1,"edges":[{"node":{"excerpt":"0. 시작하기 전 이미지 파일을 실시간으로 감지하고, 스프링 서버로 전송하는 것을 구현하였습니다. 기본적인 구조는 클라이언트-서버 구조를 가지고있습니다 클라이언트는 파일을 생성하고 파일을 감지하여 서버로 전송합니다 서버는 클라이언트로 부터 받은 파일…","fields":{"slug":"/filedetect-springfileserver/"},"frontmatter":{"date":"Jul 06, 2022","update":"Jan 01, 0001","title":"실시간으로 파일 감지하고 스프링으로 파일 통신을 해보자","tags":["SpringBoot","ToyProject","FileWatch"]}}}]},{"fieldValue":"Gatsby","totalCount":1,"edges":[{"node":{"excerpt":"처음에는 Jekyll로 블로그를 만들었는데 생각보다 마음에 안들어서, 검색하다보니 Gatsby를 발견했다.\nGatsby는  프레임워크를 기반으로 만들었는데 React를 전에 한번 입문해봐서 이걸로 선택했다.\n\n\n처음에는 으로 node module를 …","fields":{"slug":"/gatsby-blog-start/"},"frontmatter":{"date":"Sep 28, 2021","update":"Jan 01, 0001","title":"Gatsby로 블로그를 만들기","tags":["Gatsby","Blog"]}}}]},{"fieldValue":"JAVA","totalCount":1,"edges":[{"node":{"excerpt":"asdf란? (asdf 설치 하기) asdf-vm은 mac OS의 각종 프로그램의 버전을 손쉽게 관리해주는 성의 없어 보이는 이름의 도구입니다.\n기존에 nvm, rbenv등 언어, 프로그램별로 달랐던 관리 도구를 하나로 통합해서 사용할 수 있습니다.…","fields":{"slug":"/asdf-java/"},"frontmatter":{"date":"Jan 05, 2022","update":"Jan 01, 0001","title":"asdf 를 이용한 JAVA 버전 별 설치","tags":["JAVA","자바","asdf"]}}}]},{"fieldValue":"JWT","totalCount":5,"edges":[{"node":{"excerpt":"1. 회원가입 API 작성 SecurityUtil 클래스 간단한 유틸리티 메소드를 만들기 위해  클래스를 util 패키지에 생성하겠습니다.  메소드의 역활은 SecurityContext의 Authentication 객체를 이용해 을 리턴해주는 간단한…","fields":{"slug":"/springboot-jwt-tutorial5/"},"frontmatter":{"date":"Jan 14, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 5장 회원가입, 권한검증 [최종]","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"1. DTO 클래스 생성 LoginDto 클래스 외부와의 통신에 사용할 DTO 패키지 및 클래스를 생성합니다. Lombok 어노테이션(Get, Set 등)이 추가되었고 @Valid 관련 어노테이션을 추가했습니다. 로그인 할 이용자의 아이디, 비밀번호…","fields":{"slug":"/springboot-jwt-tutorial4/"},"frontmatter":{"date":"Jan 13, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 4장 DTO,Repository,로그인 구현","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"1. JWT 설정추가 application.yml 파일을 열고, jwt 설정을 추가하겠습니다. header : JWT를 검증하는데 필요한 정보 secret : HS512 알고리즘을 사용할 것이기 때문에 512bit, 즉 64byte 이상의 secre…","fields":{"slug":"/springboot-jwt-tutorial3/"},"frontmatter":{"date":"Jan 12, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 3장 JWT코드, Security 설정 추가","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"1. 401 Unauthorized 해결을 위한 Security 설정 SecurityConfig 생성  config 패키지를 생성한뒤, SecurityConfig 클래스를 작성합니다. SecurityConfigurer 설정을 위한 두가지 방법  를 …","fields":{"slug":"/springboot-jwt-tutorial2/"},"frontmatter":{"date":"Jan 08, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 2장 Security 설정, Data 설정","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"인프런 강의(Spring Boot JWT Tutorial)를 수강하며, 내용들을 기록한 페이지입니다. 배우는 것 Spring Boot를 이용한 JWT 인증, 인가 구현 Spring Security 기초 회원가입, 로그인, 권한로직 JWT 소개 (JW…","fields":{"slug":"/springboot-jwt-tutorial1/"},"frontmatter":{"date":"Jan 07, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 1장 JWT소개,프로젝트생성","tags":["SpringBoot","JWT","튜토리얼"]}}}]},{"fieldValue":"Kubernetes","totalCount":2,"edges":[{"node":{"excerpt":"개요 ArgoCD에서는 알림 기능을 제공하는데 해당 기능을 사용하면 ArgoCD에서 사용되는 Application(예: Argo를 통해 배포한 k8s object)을 지속적으로 모니터링하고 상태의 변경 사항을 알릴 수 있다. ArgoCD에서는 Tri…","fields":{"slug":"/argocd-notification/"},"frontmatter":{"date":"May 24, 2023","update":"Jan 01, 0001","title":"[K8S] ArgoCD Notification을 이용해 Discord Webhook으로 알림을 보내보자","tags":["Kubernetes","ArgoCD"]}}},{"node":{"excerpt":"Cert-Manager \nCert-Manager는 Kubernetes 내부에서 HTTPS 통신을 위한 인증서를 생성하고 인증서가 만료되면 자동으로 갱신해주는 Certificate Manager Controller 이다. 해당 문서에서는 Cert-Ma…","fields":{"slug":"/cert-manager-begin/"},"frontmatter":{"date":"Mar 14, 2023","update":"Jan 01, 0001","title":"[K8S] Cert-Manager 설치 및 ACME DNS01 챌린지를 통한 Let's encrypt 인증서 발급 및 사용","tags":["Kubernetes","Cert-Manager"]}}}]},{"fieldValue":"Lambda","totalCount":1,"edges":[{"node":{"excerpt":"AWS - S3 리소스를 CloudFront로 캐싱하자 이어서 S3 이미지 리사이징 동작 순서 클라이언트에서  요청을 보냄. CDN에서 w, h, f, q 쿼리 파라미터가 붙어있으면  해당 S3 Object(이미지)가 CDN에 캐싱이 되어있으면 해당…","fields":{"slug":"/aws-s3-image-resize/"},"frontmatter":{"date":"Apr 12, 2023","update":"Jan 01, 0001","title":"[AWS] Lambda@Edge를 통해 이미지 리사이징을 해서 웹 성능 개선을 해보자","tags":["AWS","Cache","S3","CloudFront","Lambda"]}}}]},{"fieldValue":"MSA","totalCount":1,"edges":[{"node":{"excerpt":"개인적으로 참고할려고 기록하는 글입니다. MSA 구성요소 및 패턴의 유형 인프라 구성요소 : 마이크로서비스를 지탱하는 하부구조 인프라를 구축하는데 필요한 구성요소 플랫폼 패턴 : 인프라 위에서 마이크로서비스의 운영과 관리를 지원하는 플랫폼 차원의 패…","fields":{"slug":"/msa-related-term/"},"frontmatter":{"date":"Sep 28, 2021","update":"Jan 01, 0001","title":"마이크로서비스 아키텍처(MSA) 관련 용어 정리","tags":["MSA","마이크로서비스 아키텍쳐","정리"]}}}]},{"fieldValue":"Monitoring","totalCount":1,"edges":[{"node":{"excerpt":"Prometheus는 메트릭 수집, 알림, 서비스 디스커버리 기능을 제공하는 오픈소스 모니터링 시스템입니다. Prometheus는 단기 작업을 위해 직접 스크랩 하거나\nshort-lived jobs를 push gateway를 통해 스크랩합니다.\n스크…","fields":{"slug":"/what-is-prometheus/"},"frontmatter":{"date":"Feb 09, 2023","update":"Jan 01, 0001","title":"[Monitoring] Prometheus 개요 및 특징 그리고 데이터 수집 방식","tags":["Prometheus","Monitoring"]}}}]},{"fieldValue":"NestJS","totalCount":1,"edges":[{"node":{"excerpt":"NestJS란  Node.JS에 기반을 둔 웹 API 프레임워크\nExpress 또는 Fastify 프레임워크를 래핑하여 동작함 Node.js는 쉽게 사용하고 뛰어난 확장성이 있지만, 과도한 유연함으로 인해 SW의 품질이 일정하지 않고 알맞는 라이브러…","fields":{"slug":"/what-is-nestjs/"},"frontmatter":{"date":"Feb 10, 2023","update":"Jan 01, 0001","title":"NestJS의 개요 및 특징","tags":["Backend","NestJS"]}}}]},{"fieldValue":"Prometheus","totalCount":1,"edges":[{"node":{"excerpt":"Prometheus는 메트릭 수집, 알림, 서비스 디스커버리 기능을 제공하는 오픈소스 모니터링 시스템입니다. Prometheus는 단기 작업을 위해 직접 스크랩 하거나\nshort-lived jobs를 push gateway를 통해 스크랩합니다.\n스크…","fields":{"slug":"/what-is-prometheus/"},"frontmatter":{"date":"Feb 09, 2023","update":"Jan 01, 0001","title":"[Monitoring] Prometheus 개요 및 특징 그리고 데이터 수집 방식","tags":["Prometheus","Monitoring"]}}}]},{"fieldValue":"Properties","totalCount":1,"edges":[{"node":{"excerpt":"application.properties 스프링 애플리케이션은 다음 리소스가 주어진 순서대로 고려된다. 명령행 인수 패키징된 애플리케이션 외부의  패키징된 애플리케이션 내부의  application-{profile}.properties는 프로필에 관…","fields":{"slug":"/springboot-application-properties-extern/"},"frontmatter":{"date":"Sep 27, 2021","update":"Jan 01, 0001","title":"[SpringBoot] 속성 외부화","tags":["SpringBoot","속성","Properties"]}}}]},{"fieldValue":"React","totalCount":1,"edges":[{"node":{"excerpt":"외부 라이브러리 없이, 웹 표준을 만족하는 API인 Web Speech API 만으로 TTS를 사용해보자. Web Speech API는 크게 SpeechSynthesis(Text-to-Speech)와 SpeechRecognition (Asynchro…","fields":{"slug":"/react-tts/"},"frontmatter":{"date":"Jul 13, 2022","update":"Jan 01, 0001","title":"[React] 외부 라이브러리 없이 Text To Speech(TTS)를 사용해보자","tags":["React"]}}}]},{"fieldValue":"S3","totalCount":2,"edges":[{"node":{"excerpt":"AWS - S3 리소스를 CloudFront로 캐싱하자 이어서 S3 이미지 리사이징 동작 순서 클라이언트에서  요청을 보냄. CDN에서 w, h, f, q 쿼리 파라미터가 붙어있으면  해당 S3 Object(이미지)가 CDN에 캐싱이 되어있으면 해당…","fields":{"slug":"/aws-s3-image-resize/"},"frontmatter":{"date":"Apr 12, 2023","update":"Jan 01, 0001","title":"[AWS] Lambda@Edge를 통해 이미지 리사이징을 해서 웹 성능 개선을 해보자","tags":["AWS","Cache","S3","CloudFront","Lambda"]}}},{"node":{"excerpt":"S3에 CloudFront 적용하기 현재 개발중인 서비스에서 이미지를 불러오는것을 S3에서 직접적으로 가져와 사용하고 있는데\n서비스 특성상 이러한 이미지와 영상과 같은 미디어 파일들을 많이 사용되는 서비스 구조라 \n서비스의 구조가 많이 무거워지고 리…","fields":{"slug":"/aws-s3-cloudfront/"},"frontmatter":{"date":"Apr 05, 2023","update":"Jan 01, 0001","title":"[AWS] S3 리소스를 CloudFront를 통해 캐싱하자","tags":["AWS","Cache","S3","CloudFront"]}}}]},{"fieldValue":"Spring","totalCount":10,"edges":[{"node":{"excerpt":"필자가 진행하는 토이 프로젝트 냥피스에서는 이미지를 업로드 하는 기능과 이미지 조회 기능을 제공한다.\n해당 기능을 구현하기 위해서 도움이 될만한 내용이 있으므로 이 기능을 구현하기 위한 분들은 읽어보면 좋을 것이다. Get Started 1. 이미지…","fields":{"slug":"/image-upload-view/"},"frontmatter":{"date":"May 02, 2023","update":"Jan 01, 0001","title":"[Spring] 간단한 이미지 업로드 및 정적 리소스를 통한 이미지 조회를 구현해보자.","tags":["Spring","upload","multipart"]}}},{"node":{"excerpt":"싱글톤 범위 위 코드에서  객체와  객체는 동일한 객체이다.  스프링 컨테이너는 빈 객체를 한 개만 생성한다. 한 식별자에 대해 한 개의 객체만 존재하는 빈은 싱글톤() 범위()를 갖는다. 별도 설정을 하지 않으면 빈은 싱글톤 범위를 갖는다 프로토타…","fields":{"slug":"/bean_scope_annotation/"},"frontmatter":{"date":"Aug 16, 2022","update":"Jan 01, 0001","title":"[Spring] 빈 객체의 생성과 관리 범위(@Scope 어노테이션)","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"모든 클래스가 ,  인터페이스를 상속받아 구현할 수 있는 것은 아니다.  외부에서 제공받은 클래스(외부 라이브러리 등)를 스프링  객체로 설정하고 싶을 때도 있다. 이 경우에는 소스코드를 수정하지 않는 이상 두 인터페이스를 구현할 수 없다.  이렇게…","fields":{"slug":"/bean_custom_method/"},"frontmatter":{"date":"Jul 22, 2022","update":"Jan 01, 0001","title":"[Spring] InitializingBean, DisposableBean 구현없이 초기화/소멸 메소드 실행하기","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"스프링 컨테이너는 빈 객체를 초기화하고 소멸하기 위해 빈 객체의 지정한 메서드를 호출한다. 스프링은 다음의 두 인터페이스에 이 메서드를 정의한다. org.springframework.beans.factory.initalizingBean org.spr…","fields":{"slug":"/spring-bean-init-and-disposable/"},"frontmatter":{"date":"Jul 14, 2022","update":"Jan 01, 0001","title":"[Spring] 빈 객체의 초기화와 소멸 : initalizingBean과 DisposableBean 인터페이스 ","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"컨테이너 라이프사이클 스프링 컨테이너는 초기화와 종료라는 라이프사이클을 갖는다. 의 생성자를 이용해서 컨텍스트를 객체를 생성하는데 이 시점에 스프링 컨테이너를 초기화한다. 스프링 컨테이너는 설정 클래스에서 정보를 읽어와 알맞은 빈 객체를 생성하고 각…","fields":{"slug":"/spring-bean-lifecycle/"},"frontmatter":{"date":"Jun 28, 2022","update":"Jan 01, 0001","title":"[Spring] 스프링 컨테이너와 빈의 라이프사이클","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"컴포넌트 스캔 기능을 사용해서 자동 빈 등록할 때에는 충돌에 주의해야한다. 크게 두가지의 충돌이 발생할 수 있다. 1. 빈 이름 충돌 두개의 패키지에 같은 이름의 클래스가 존재할 때(모두  가 붙어있음)  발생함 클래스를 빈으로 등록할 떄 사용한 빈…","fields":{"slug":"/component-scan-conflict/"},"frontmatter":{"date":"Jun 27, 2022","update":"Jan 01, 0001","title":"[Spring] 컴포넌트 스캔에 따른 충돌처리","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"@Component 어노테이션 스프링이 검색해서 빈으로 등록할 수 있도록 할려면 클래스에  어노테이션을 붙여야 한다.\n 어노테이션은 해당 클래스를 스캔 대상으로 표시한다.  어노테이션에 값을 주었는지에 따라 빈으로 등록할 때 사용할 이름이 결정된다.…","fields":{"slug":"/component_scan/"},"frontmatter":{"date":"Jun 24, 2022","update":"Jan 01, 0001","title":"[Spring] @Component, @ComponentScan 으로 스캔 대상 지정","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"@Configuration  클래스에서 의존 주입(명시적 주입)을 했는데 자동 주입 대상이면 어떻게 될까? MemberInfoPrinter 클래스의 setPrinter 메소드는 위와 같이 @Autowired 어노테이션이 붙어 있다.  메소드는  클래…","fields":{"slug":"/autowired_and_manual_injection/"},"frontmatter":{"date":"Jun 23, 2022","update":"Jan 01, 0001","title":"[Spring] @Autowird 자동 의존 주입과 명시적 의존 주입 간의 관계","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"@Autowired 어노테이션을 이용한 의존 자동 주입 자동 주입 기능을 사용하지 않은 코드 (직접 의존 주입) 위 코드에서는 직접 세터 메소드를 통해 의존 주입을 하고있다 \n자동 주입 기능을 사용하면 스프링이 알아서 의존 객체를 찾아서 주입한다. …","fields":{"slug":"/spring_autowired/"},"frontmatter":{"date":"Jun 23, 2022","update":"Jan 01, 0001","title":"[Spring] @Autowird 어노테이션을 이용한 의존 자동 주입과 @Qualifier 빈 한정자","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"주입 대상 객체를 모두 빈 객체로 설정해야 하나? 주입할 객체가 꼭 스프링 빈이어야 할 필요는 없다. 이 설정 코드는 를 빈으로 등록하지 않았다.\n이렇게 해도 정상적으로 작동한다. 객체를 스프링 빈으로 등록할 때와, 하지 않을 떄의 차이점 스프링 컨…","fields":{"slug":"/injection_object_is_bean/"},"frontmatter":{"date":"Mar 21, 2022","update":"Jan 01, 0001","title":"[Spring] 주입 대상 객체를 모두 빈으로 해야하나?","tags":["Spring","스프링5입문시리즈"]}}}]},{"fieldValue":"Spring JPA","totalCount":1,"edges":[{"node":{"excerpt":"쇼핑물에서 이용자의 구매이력을 조회 시, N+1 문제가 발생해 성능저하가 일어나는 상황에서\n간단한 해결법으로 성능 향상을 이루는 법을 알아보겠습니다. N+1 문제란? 연관 관계에서 발생하는 이슈로 연관 관계가 설정된 엔티티를 조회할 경우에 조회된 데…","fields":{"slug":"/spring-jpa-N+1-problem/"},"frontmatter":{"date":"Jan 28, 2022","update":"Jan 01, 0001","title":"[Spring JPA] 쇼핑물 주문이력 조회 시 N+1 문제 해결하기","tags":["Spring JPA"]}}}]},{"fieldValue":"Spring Security","totalCount":1,"edges":[{"node":{"excerpt":"Spring Security란? Spring 기반의 애플리케이션의 보안(인증과 권한, 인가 등)을 담당하는 스프링 하위 프레임워크 인증과 권한에 대한 부분을 Filter 흐름에 따라 처리 Filter는 Dispatcher Servlet 으로 가기전에…","fields":{"slug":"/spring-security-1/"},"frontmatter":{"date":"Jan 04, 2022","update":"Jan 01, 0001","title":"SpringSecurity 란?","tags":["Spring Security"]}}}]},{"fieldValue":"SpringBoot","totalCount":11,"edges":[{"node":{"excerpt":"1. 의존성 설정 build.gradle 에 추가 2.SMTP 설정 구글 STMP 설정을 적용합니다. 3. Controller 작성  메소드 코드를 작성합니다.  을 통해 email을 받아오고  메소드를 호출하여  사용자의 이메일로 인증 번호를 발송…","fields":{"slug":"/springboot-mail-auth-smtp-gmail/"},"frontmatter":{"date":"Oct 08, 2022","update":"Jan 01, 0001","title":"[SpringBoot] 회원가입 시 이메일 인증을 구현해보자 (Gmail)","tags":["SpringBoot"]}}},{"node":{"excerpt":"0. 시작하기 전 이미지 파일을 실시간으로 감지하고, 스프링 서버로 전송하는 것을 구현하였습니다. 기본적인 구조는 클라이언트-서버 구조를 가지고있습니다 클라이언트는 파일을 생성하고 파일을 감지하여 서버로 전송합니다 서버는 클라이언트로 부터 받은 파일…","fields":{"slug":"/filedetect-springfileserver/"},"frontmatter":{"date":"Jul 06, 2022","update":"Jan 01, 0001","title":"실시간으로 파일 감지하고 스프링으로 파일 통신을 해보자","tags":["SpringBoot","ToyProject","FileWatch"]}}},{"node":{"excerpt":"JPA 및 H2 세팅 build.gradle 파일에 h2, jpa 의존성을 추가합니다. 그리고 application.properties 파일에 h2 와 jpa 에 대한 설정을 작성합니다.    : h2 console 페이지 활성화   : 데이터베이스…","fields":{"slug":"/spring-how-to-h2-jpa-setting/"},"frontmatter":{"date":"Jul 05, 2022","update":"Jan 01, 0001","title":"[SpringBoot] 프로젝트에 H2 및 JPA 세팅법","tags":["SpringBoot"]}}},{"node":{"excerpt":"Spring Cloud - Config Server/Client  spring cloud config server 구성 아키텍쳐 Spring Cloud Config Server 의 저장소는 git, vault, aws s3, redis, jdbc 등…","fields":{"slug":"/spring-cloud-config/"},"frontmatter":{"date":"Mar 07, 2022","update":"Jan 01, 0001","title":"Spring Cloud Config Server/Client","tags":["SpringBoot","Cloud","Config"]}}},{"node":{"excerpt":"이 글에서는 스프링부트에서 디스코드 WebHook을 사용하여, 어떠한 이벤트 요청이 오면, 알림을 알려주는 것을 해보겠습니다. WebHook 이란?  WebHook은 웹페이지 또는 웹앱에서 발생하는 특정 행동(이벤트)들을 커스텀 Callback 형식…","fields":{"slug":"/springboot-disord-webhook/"},"frontmatter":{"date":"Feb 19, 2022","update":"Jan 01, 0001","title":"[SpringBoot] 디스코드 WebHook으로 알림 보내기","tags":["SpringBoot","Discord","WebHook"]}}},{"node":{"excerpt":"1. 회원가입 API 작성 SecurityUtil 클래스 간단한 유틸리티 메소드를 만들기 위해  클래스를 util 패키지에 생성하겠습니다.  메소드의 역활은 SecurityContext의 Authentication 객체를 이용해 을 리턴해주는 간단한…","fields":{"slug":"/springboot-jwt-tutorial5/"},"frontmatter":{"date":"Jan 14, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 5장 회원가입, 권한검증 [최종]","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"1. DTO 클래스 생성 LoginDto 클래스 외부와의 통신에 사용할 DTO 패키지 및 클래스를 생성합니다. Lombok 어노테이션(Get, Set 등)이 추가되었고 @Valid 관련 어노테이션을 추가했습니다. 로그인 할 이용자의 아이디, 비밀번호…","fields":{"slug":"/springboot-jwt-tutorial4/"},"frontmatter":{"date":"Jan 13, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 4장 DTO,Repository,로그인 구현","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"1. JWT 설정추가 application.yml 파일을 열고, jwt 설정을 추가하겠습니다. header : JWT를 검증하는데 필요한 정보 secret : HS512 알고리즘을 사용할 것이기 때문에 512bit, 즉 64byte 이상의 secre…","fields":{"slug":"/springboot-jwt-tutorial3/"},"frontmatter":{"date":"Jan 12, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 3장 JWT코드, Security 설정 추가","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"1. 401 Unauthorized 해결을 위한 Security 설정 SecurityConfig 생성  config 패키지를 생성한뒤, SecurityConfig 클래스를 작성합니다. SecurityConfigurer 설정을 위한 두가지 방법  를 …","fields":{"slug":"/springboot-jwt-tutorial2/"},"frontmatter":{"date":"Jan 08, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 2장 Security 설정, Data 설정","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"인프런 강의(Spring Boot JWT Tutorial)를 수강하며, 내용들을 기록한 페이지입니다. 배우는 것 Spring Boot를 이용한 JWT 인증, 인가 구현 Spring Security 기초 회원가입, 로그인, 권한로직 JWT 소개 (JW…","fields":{"slug":"/springboot-jwt-tutorial1/"},"frontmatter":{"date":"Jan 07, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 1장 JWT소개,프로젝트생성","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"application.properties 스프링 애플리케이션은 다음 리소스가 주어진 순서대로 고려된다. 명령행 인수 패키징된 애플리케이션 외부의  패키징된 애플리케이션 내부의  application-{profile}.properties는 프로필에 관…","fields":{"slug":"/springboot-application-properties-extern/"},"frontmatter":{"date":"Sep 27, 2021","update":"Jan 01, 0001","title":"[SpringBoot] 속성 외부화","tags":["SpringBoot","속성","Properties"]}}}]},{"fieldValue":"Token","totalCount":1,"edges":[{"node":{"excerpt":"1. JWT (Json Web Token)란? JSON 객체를 사용해서 토큰 자체에 정보를 저장하는 Web Token Header, Payload, Signature 3개 부분으로 구성됨. 쿠키나 세션을 이용한 인증보다 안전하고 효율적임 일반적으로는…","fields":{"slug":"/json-web-token/"},"frontmatter":{"date":"Jan 10, 2022","update":"Jan 01, 0001","title":"Json Web Token(JWT) 란?","tags":["보안","Token"]}}}]},{"fieldValue":"ToyProject","totalCount":1,"edges":[{"node":{"excerpt":"0. 시작하기 전 이미지 파일을 실시간으로 감지하고, 스프링 서버로 전송하는 것을 구현하였습니다. 기본적인 구조는 클라이언트-서버 구조를 가지고있습니다 클라이언트는 파일을 생성하고 파일을 감지하여 서버로 전송합니다 서버는 클라이언트로 부터 받은 파일…","fields":{"slug":"/filedetect-springfileserver/"},"frontmatter":{"date":"Jul 06, 2022","update":"Jan 01, 0001","title":"실시간으로 파일 감지하고 스프링으로 파일 통신을 해보자","tags":["SpringBoot","ToyProject","FileWatch"]}}}]},{"fieldValue":"WebHook","totalCount":1,"edges":[{"node":{"excerpt":"이 글에서는 스프링부트에서 디스코드 WebHook을 사용하여, 어떠한 이벤트 요청이 오면, 알림을 알려주는 것을 해보겠습니다. WebHook 이란?  WebHook은 웹페이지 또는 웹앱에서 발생하는 특정 행동(이벤트)들을 커스텀 Callback 형식…","fields":{"slug":"/springboot-disord-webhook/"},"frontmatter":{"date":"Feb 19, 2022","update":"Jan 01, 0001","title":"[SpringBoot] 디스코드 WebHook으로 알림 보내기","tags":["SpringBoot","Discord","WebHook"]}}}]},{"fieldValue":"asdf","totalCount":1,"edges":[{"node":{"excerpt":"asdf란? (asdf 설치 하기) asdf-vm은 mac OS의 각종 프로그램의 버전을 손쉽게 관리해주는 성의 없어 보이는 이름의 도구입니다.\n기존에 nvm, rbenv등 언어, 프로그램별로 달랐던 관리 도구를 하나로 통합해서 사용할 수 있습니다.…","fields":{"slug":"/asdf-java/"},"frontmatter":{"date":"Jan 05, 2022","update":"Jan 01, 0001","title":"asdf 를 이용한 JAVA 버전 별 설치","tags":["JAVA","자바","asdf"]}}}]},{"fieldValue":"error","totalCount":1,"edges":[{"node":{"excerpt":"이 문서는 필자가 와카타임 작동이 안되는 문제를 해결하는 과정을 담았습니다.  빠르게 결론부터 보고 싶으시면은 해결법을 봐주세요. 오류 내용  \n이번주에 갑자기 와카타임이 갑자기 측정이 안된것을 확인. 인텔리제이에서도 와카타임이  로 뜨고 작업 시간…","fields":{"slug":"/wakatime-is-dead/"},"frontmatter":{"date":"Mar 30, 2023","update":"Jan 01, 0001","title":"[Wakatime] 와카타임이 갑자기 죽었다. won't send heartbeat due to backoff 오류 해결법","tags":["error","wakatime"]}}}]},{"fieldValue":"multipart","totalCount":1,"edges":[{"node":{"excerpt":"필자가 진행하는 토이 프로젝트 냥피스에서는 이미지를 업로드 하는 기능과 이미지 조회 기능을 제공한다.\n해당 기능을 구현하기 위해서 도움이 될만한 내용이 있으므로 이 기능을 구현하기 위한 분들은 읽어보면 좋을 것이다. Get Started 1. 이미지…","fields":{"slug":"/image-upload-view/"},"frontmatter":{"date":"May 02, 2023","update":"Jan 01, 0001","title":"[Spring] 간단한 이미지 업로드 및 정적 리소스를 통한 이미지 조회를 구현해보자.","tags":["Spring","upload","multipart"]}}}]},{"fieldValue":"upload","totalCount":1,"edges":[{"node":{"excerpt":"필자가 진행하는 토이 프로젝트 냥피스에서는 이미지를 업로드 하는 기능과 이미지 조회 기능을 제공한다.\n해당 기능을 구현하기 위해서 도움이 될만한 내용이 있으므로 이 기능을 구현하기 위한 분들은 읽어보면 좋을 것이다. Get Started 1. 이미지…","fields":{"slug":"/image-upload-view/"},"frontmatter":{"date":"May 02, 2023","update":"Jan 01, 0001","title":"[Spring] 간단한 이미지 업로드 및 정적 리소스를 통한 이미지 조회를 구현해보자.","tags":["Spring","upload","multipart"]}}}]},{"fieldValue":"wakatime","totalCount":1,"edges":[{"node":{"excerpt":"이 문서는 필자가 와카타임 작동이 안되는 문제를 해결하는 과정을 담았습니다.  빠르게 결론부터 보고 싶으시면은 해결법을 봐주세요. 오류 내용  \n이번주에 갑자기 와카타임이 갑자기 측정이 안된것을 확인. 인텔리제이에서도 와카타임이  로 뜨고 작업 시간…","fields":{"slug":"/wakatime-is-dead/"},"frontmatter":{"date":"Mar 30, 2023","update":"Jan 01, 0001","title":"[Wakatime] 와카타임이 갑자기 죽었다. won't send heartbeat due to backoff 오류 해결법","tags":["error","wakatime"]}}}]},{"fieldValue":"마이크로서비스 아키텍쳐","totalCount":1,"edges":[{"node":{"excerpt":"개인적으로 참고할려고 기록하는 글입니다. MSA 구성요소 및 패턴의 유형 인프라 구성요소 : 마이크로서비스를 지탱하는 하부구조 인프라를 구축하는데 필요한 구성요소 플랫폼 패턴 : 인프라 위에서 마이크로서비스의 운영과 관리를 지원하는 플랫폼 차원의 패…","fields":{"slug":"/msa-related-term/"},"frontmatter":{"date":"Sep 28, 2021","update":"Jan 01, 0001","title":"마이크로서비스 아키텍처(MSA) 관련 용어 정리","tags":["MSA","마이크로서비스 아키텍쳐","정리"]}}}]},{"fieldValue":"보안","totalCount":1,"edges":[{"node":{"excerpt":"1. JWT (Json Web Token)란? JSON 객체를 사용해서 토큰 자체에 정보를 저장하는 Web Token Header, Payload, Signature 3개 부분으로 구성됨. 쿠키나 세션을 이용한 인증보다 안전하고 효율적임 일반적으로는…","fields":{"slug":"/json-web-token/"},"frontmatter":{"date":"Jan 10, 2022","update":"Jan 01, 0001","title":"Json Web Token(JWT) 란?","tags":["보안","Token"]}}}]},{"fieldValue":"속성","totalCount":1,"edges":[{"node":{"excerpt":"application.properties 스프링 애플리케이션은 다음 리소스가 주어진 순서대로 고려된다. 명령행 인수 패키징된 애플리케이션 외부의  패키징된 애플리케이션 내부의  application-{profile}.properties는 프로필에 관…","fields":{"slug":"/springboot-application-properties-extern/"},"frontmatter":{"date":"Sep 27, 2021","update":"Jan 01, 0001","title":"[SpringBoot] 속성 외부화","tags":["SpringBoot","속성","Properties"]}}}]},{"fieldValue":"스프링5입문시리즈","totalCount":9,"edges":[{"node":{"excerpt":"싱글톤 범위 위 코드에서  객체와  객체는 동일한 객체이다.  스프링 컨테이너는 빈 객체를 한 개만 생성한다. 한 식별자에 대해 한 개의 객체만 존재하는 빈은 싱글톤() 범위()를 갖는다. 별도 설정을 하지 않으면 빈은 싱글톤 범위를 갖는다 프로토타…","fields":{"slug":"/bean_scope_annotation/"},"frontmatter":{"date":"Aug 16, 2022","update":"Jan 01, 0001","title":"[Spring] 빈 객체의 생성과 관리 범위(@Scope 어노테이션)","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"모든 클래스가 ,  인터페이스를 상속받아 구현할 수 있는 것은 아니다.  외부에서 제공받은 클래스(외부 라이브러리 등)를 스프링  객체로 설정하고 싶을 때도 있다. 이 경우에는 소스코드를 수정하지 않는 이상 두 인터페이스를 구현할 수 없다.  이렇게…","fields":{"slug":"/bean_custom_method/"},"frontmatter":{"date":"Jul 22, 2022","update":"Jan 01, 0001","title":"[Spring] InitializingBean, DisposableBean 구현없이 초기화/소멸 메소드 실행하기","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"스프링 컨테이너는 빈 객체를 초기화하고 소멸하기 위해 빈 객체의 지정한 메서드를 호출한다. 스프링은 다음의 두 인터페이스에 이 메서드를 정의한다. org.springframework.beans.factory.initalizingBean org.spr…","fields":{"slug":"/spring-bean-init-and-disposable/"},"frontmatter":{"date":"Jul 14, 2022","update":"Jan 01, 0001","title":"[Spring] 빈 객체의 초기화와 소멸 : initalizingBean과 DisposableBean 인터페이스 ","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"컨테이너 라이프사이클 스프링 컨테이너는 초기화와 종료라는 라이프사이클을 갖는다. 의 생성자를 이용해서 컨텍스트를 객체를 생성하는데 이 시점에 스프링 컨테이너를 초기화한다. 스프링 컨테이너는 설정 클래스에서 정보를 읽어와 알맞은 빈 객체를 생성하고 각…","fields":{"slug":"/spring-bean-lifecycle/"},"frontmatter":{"date":"Jun 28, 2022","update":"Jan 01, 0001","title":"[Spring] 스프링 컨테이너와 빈의 라이프사이클","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"컴포넌트 스캔 기능을 사용해서 자동 빈 등록할 때에는 충돌에 주의해야한다. 크게 두가지의 충돌이 발생할 수 있다. 1. 빈 이름 충돌 두개의 패키지에 같은 이름의 클래스가 존재할 때(모두  가 붙어있음)  발생함 클래스를 빈으로 등록할 떄 사용한 빈…","fields":{"slug":"/component-scan-conflict/"},"frontmatter":{"date":"Jun 27, 2022","update":"Jan 01, 0001","title":"[Spring] 컴포넌트 스캔에 따른 충돌처리","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"@Component 어노테이션 스프링이 검색해서 빈으로 등록할 수 있도록 할려면 클래스에  어노테이션을 붙여야 한다.\n 어노테이션은 해당 클래스를 스캔 대상으로 표시한다.  어노테이션에 값을 주었는지에 따라 빈으로 등록할 때 사용할 이름이 결정된다.…","fields":{"slug":"/component_scan/"},"frontmatter":{"date":"Jun 24, 2022","update":"Jan 01, 0001","title":"[Spring] @Component, @ComponentScan 으로 스캔 대상 지정","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"@Configuration  클래스에서 의존 주입(명시적 주입)을 했는데 자동 주입 대상이면 어떻게 될까? MemberInfoPrinter 클래스의 setPrinter 메소드는 위와 같이 @Autowired 어노테이션이 붙어 있다.  메소드는  클래…","fields":{"slug":"/autowired_and_manual_injection/"},"frontmatter":{"date":"Jun 23, 2022","update":"Jan 01, 0001","title":"[Spring] @Autowird 자동 의존 주입과 명시적 의존 주입 간의 관계","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"@Autowired 어노테이션을 이용한 의존 자동 주입 자동 주입 기능을 사용하지 않은 코드 (직접 의존 주입) 위 코드에서는 직접 세터 메소드를 통해 의존 주입을 하고있다 \n자동 주입 기능을 사용하면 스프링이 알아서 의존 객체를 찾아서 주입한다. …","fields":{"slug":"/spring_autowired/"},"frontmatter":{"date":"Jun 23, 2022","update":"Jan 01, 0001","title":"[Spring] @Autowird 어노테이션을 이용한 의존 자동 주입과 @Qualifier 빈 한정자","tags":["Spring","스프링5입문시리즈"]}}},{"node":{"excerpt":"주입 대상 객체를 모두 빈 객체로 설정해야 하나? 주입할 객체가 꼭 스프링 빈이어야 할 필요는 없다. 이 설정 코드는 를 빈으로 등록하지 않았다.\n이렇게 해도 정상적으로 작동한다. 객체를 스프링 빈으로 등록할 때와, 하지 않을 떄의 차이점 스프링 컨…","fields":{"slug":"/injection_object_is_bean/"},"frontmatter":{"date":"Mar 21, 2022","update":"Jan 01, 0001","title":"[Spring] 주입 대상 객체를 모두 빈으로 해야하나?","tags":["Spring","스프링5입문시리즈"]}}}]},{"fieldValue":"자바","totalCount":1,"edges":[{"node":{"excerpt":"asdf란? (asdf 설치 하기) asdf-vm은 mac OS의 각종 프로그램의 버전을 손쉽게 관리해주는 성의 없어 보이는 이름의 도구입니다.\n기존에 nvm, rbenv등 언어, 프로그램별로 달랐던 관리 도구를 하나로 통합해서 사용할 수 있습니다.…","fields":{"slug":"/asdf-java/"},"frontmatter":{"date":"Jan 05, 2022","update":"Jan 01, 0001","title":"asdf 를 이용한 JAVA 버전 별 설치","tags":["JAVA","자바","asdf"]}}}]},{"fieldValue":"정리","totalCount":1,"edges":[{"node":{"excerpt":"개인적으로 참고할려고 기록하는 글입니다. MSA 구성요소 및 패턴의 유형 인프라 구성요소 : 마이크로서비스를 지탱하는 하부구조 인프라를 구축하는데 필요한 구성요소 플랫폼 패턴 : 인프라 위에서 마이크로서비스의 운영과 관리를 지원하는 플랫폼 차원의 패…","fields":{"slug":"/msa-related-term/"},"frontmatter":{"date":"Sep 28, 2021","update":"Jan 01, 0001","title":"마이크로서비스 아키텍처(MSA) 관련 용어 정리","tags":["MSA","마이크로서비스 아키텍쳐","정리"]}}}]},{"fieldValue":"튜토리얼","totalCount":5,"edges":[{"node":{"excerpt":"1. 회원가입 API 작성 SecurityUtil 클래스 간단한 유틸리티 메소드를 만들기 위해  클래스를 util 패키지에 생성하겠습니다.  메소드의 역활은 SecurityContext의 Authentication 객체를 이용해 을 리턴해주는 간단한…","fields":{"slug":"/springboot-jwt-tutorial5/"},"frontmatter":{"date":"Jan 14, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 5장 회원가입, 권한검증 [최종]","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"1. DTO 클래스 생성 LoginDto 클래스 외부와의 통신에 사용할 DTO 패키지 및 클래스를 생성합니다. Lombok 어노테이션(Get, Set 등)이 추가되었고 @Valid 관련 어노테이션을 추가했습니다. 로그인 할 이용자의 아이디, 비밀번호…","fields":{"slug":"/springboot-jwt-tutorial4/"},"frontmatter":{"date":"Jan 13, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 4장 DTO,Repository,로그인 구현","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"1. JWT 설정추가 application.yml 파일을 열고, jwt 설정을 추가하겠습니다. header : JWT를 검증하는데 필요한 정보 secret : HS512 알고리즘을 사용할 것이기 때문에 512bit, 즉 64byte 이상의 secre…","fields":{"slug":"/springboot-jwt-tutorial3/"},"frontmatter":{"date":"Jan 12, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 3장 JWT코드, Security 설정 추가","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"1. 401 Unauthorized 해결을 위한 Security 설정 SecurityConfig 생성  config 패키지를 생성한뒤, SecurityConfig 클래스를 작성합니다. SecurityConfigurer 설정을 위한 두가지 방법  를 …","fields":{"slug":"/springboot-jwt-tutorial2/"},"frontmatter":{"date":"Jan 08, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 2장 Security 설정, Data 설정","tags":["SpringBoot","JWT","튜토리얼"]}}},{"node":{"excerpt":"인프런 강의(Spring Boot JWT Tutorial)를 수강하며, 내용들을 기록한 페이지입니다. 배우는 것 Spring Boot를 이용한 JWT 인증, 인가 구현 Spring Security 기초 회원가입, 로그인, 권한로직 JWT 소개 (JW…","fields":{"slug":"/springboot-jwt-tutorial1/"},"frontmatter":{"date":"Jan 07, 2022","update":"Jan 01, 0001","title":"SpringBoot JWT 튜토리얼 - 1장 JWT소개,프로젝트생성","tags":["SpringBoot","JWT","튜토리얼"]}}}]}]}},"pageContext":{}},"staticQueryHashes":["2027115977","694178885"]}